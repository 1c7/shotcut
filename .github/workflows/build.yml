name: build-shotcut

on: [push]

env:
  IMAGE_NAME: mltframework/shotcut-build:qt5.15.1-ubuntu18.04

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build
        run: |
          cd scripts
          VERSION=$(date +"%y%m%d")
          docker run -v $PWD:/root/shotcut $IMAGE_NAME
          mv shotcut.txz shotcut-linux-x86_64-$VERSION.txz
          mv src.txz shotcut-src-$VERSION.txz

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux-portable-archive
          path: |
            scripts/shotcut-linux-x86_64-*.txz

      - name: Upload to S3
        uses: mltframework/s3cmd-action@v0
        with:
          args: >-
            --access_key=${{ secrets.AWS_ACCESS_KEY }}
            --secret_key=${{ secrets.AWS_SECRET_KEY }}
            --acl-public
            --stop-on-error
            put scripts/*.txz s3://builds.us.meltytech/shotcut/

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            gcc git cmake nasm yasm zip
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-libvorbis
            mingw-w64-x86_64-libtheora
            mingw-w64-x86_64-cairo
            mingw-w64-x86_64-fftw
            mingw-w64-x86_64-libxml2
            mingw-w64-x86_64-libsamplerate
            mingw-w64-x86_64-libexif
            mingw-w64-x86_64-eigen3
            mingw-w64-x86_64-nsis
            mingw-w64-x86_64-sox
            mingw-w64-x86_64-dlfcn
            mingw-w64-x86_64-rubberband
            mingw-w64-x86_64-vid.stab
            mingw-w64-x86_64-libepoxy
            mingw-w64-x86_64-lame
            mingw-w64-x86_64-openssl
            mingw-w64-x86_64-osslsigncode
            mingw-w64-x86_64-libmfx
            mingw-w64-x86_64-libvpx
            mingw-w64-x86_64-libwebp
            mingw-w64-x86_64-opus
            mingw-w64-x86_64-x264
            mingw-w64-x86_64-x265

      - uses: actions/checkout@v2

      - name: Build
        shell: msys2 {0}
        run: |
          VERSION=$(date +"%y%m%d")
          echo VERSION=$VERSION
          pushd "$HOME"
          curl -LO https://s3.amazonaws.com/misc.meltymedia/shotcut-build/swh-plugins-win64-0.4.15.tar.xz
          curl -LO https://s3.amazonaws.com/misc.meltymedia/shotcut-build/mlt-prebuilt-mingw64-v3.txz
          tar -xJf mlt-prebuilt-mingw64-v3.txz
          mkdir Qt
          cd Qt
          curl -LO https://s3.amazonaws.com/misc.meltymedia/shotcut-build/qt-5.15.1-x64-mingw810.txz
          tar -xJf qt-5.15.1-x64-mingw810.txz
          popd
          bash scripts/build-shotcut-msys2.sh
          pushd "$HOME/build"
          zip -gr shotcut-win64-$VERSION.zip Shotcut
          makensis shotcut.nsi
          mv shotcut-setup.exe shotcut-win64-$VERSION.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: windows-portable
          path: ../build/Shotcut/

      - name: Upload packages to S3
        uses: mltframework/s3cmd-action@v0
        with:
          args: >-
            --access_key=${{ secrets.AWS_ACCESS_KEY }}
            --secret_key=${{ secrets.AWS_SECRET_KEY }}
            --acl-public
            --stop-on-error
            put ./build/*.{exe,zip} s3://builds.us.meltytech/shotcut/
